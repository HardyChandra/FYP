@model FYP.Models.AdminModel.Register

@{
	ViewData["Title"] = "Register";
}

<div class="mt-3 ml-3">
	<a href="~/Admin/Login"><span id="icon"><i class="fa-solid fa-arrow-left-long"></i></span></a>
</div>
<div id="main-wrapper" class="container d-flex flex-column justify-content-center align-items-center">
	<form asp-action="Register" id="defaultForm">
		<h3 class="my-3 text-center">Register</h3>
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-user mr-3"></i>
				</span>
				<input asp-for="Name" class="form-control" id="txtName" placeholder="e.g Hardy" autocomplete="off" />
			</div>
			<span asp-validation-for="Name" class="text-danger ml-5"></span>
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-envelope mr-3"></i>
				</span>
				<input asp-for="Email" class="form-control" id="txtEmail" placeholder="e.g hardy@mail.com" autocomplete="off" />
			</div>
			<span asp-validation-for="Email" class="text-danger ml-5"></span>
			@if (ViewBag.Message != null)
			{
				<div class="alert alert-danger alert-dismissible fade show mx-3" role="alert">
					@ViewBag.Message
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
			}
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-building mr-3"></i>
				</span>
				<input asp-for="Company" class="form-control" id="txtCompany" placeholder="e.g Google" autocomplete="off" />
			</div>
			<span asp-validation-for="Company" class="text-danger ml-5"></span>
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-lock mr-3"></i>
				</span>
				<input asp-for="Password" class="form-control" id="txtPassword" placeholder="e.g Admin123!" autocomplete="off" />
			</div>
			<span asp-validation-for="Password" class="text-danger ml-5"></span>
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-lock mr-3"></i>
				</span>
				<input asp-for="ConfirmationPassword" class="form-control" id="txtConfirmationPassword" placeholder="e.g Admin123!" autocomplete="off" />
			</div>
			<span asp-validation-for="ConfirmationPassword" class="text-danger ml-5"></span>
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-phone mr-3"></i>
				</span>
				<input asp-for="PhoneNumber" type="text" class="form-control" id="txtPhoneNumber" onkeypress="return isNumberKey(event)" placeholder="e.g 0141234567" autocomplete="off" />
			</div>
			<span asp-validation-for="PhoneNumber" class="text-danger ml-5"></span>
		</div>
		<div class="mx-3">
			<div class="input-group flex-nowrap p-2">
				<span id="icon">
					<i class="fa-solid fa-calendar-days mr-3"></i>
				</span>
				<input asp-for="DoB" class="form-control" id="dtpDoB" />
			</div>
			<span asp-validation-for="DoB" class="text-danger ml-5"></span>
		</div>

		<div class="form-group text-center">
			<input type="submit" value="Register" class="btn btn-primary w-50 my-3" id="btnRegister" />
		</div>
	</form>
</div>


<script>
	function isNumberKey(evt)
	{
		var charCode = (evt.which) ? evt.which : event.keyCode
		if (charCode > 31 && (charCode < 48 || charCode > 57))
		return false;

		return true;
	}
</script>


@section Scripts {
    @{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
